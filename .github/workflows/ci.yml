name: Pre-Release CI Testing

on:
  push:
    branches:
      - main
      - 'dev-*'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: '10'

      - name: Setup Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run Biome lint
        run: pnpm lint

  check-types:
    name: Type Checking
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: '10'

      - name: Setup Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Check TypeScript types
        run: pnpm check-types

  audit:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: '10'

      - name: Setup Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run pnpm audit
        run: |
          if [[ $(pnpm audit --json | grep '"severity":"critical"' | wc -l | tr -d ' ') -gt 0 ]]; then
            echo "Critical vulnerability found"
            exit 1
          else
            echo "No critical vulnerabilities"
            exit 0
          fi

  npx-sanity-check:
    name: NPX Sanity Check
    runs-on: ubuntu-latest
    needs:
      - lint
      - check-types
      - audit

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: '10'

      - name: Build and pack
        run: |
          pnpm install --frozen-lockfile
          pnpm build
          npm pack

      - name: Install and run with npx
        run: |
          npx ./local-operator-ui-*.tgz &
          NPX_PID=$!

          sleep 15

          if ps -p $NPX_PID > /dev/null; then
            echo "Application started successfully with npx"
            kill $NPX_PID
            wait $NPX_PID || true
            exit 0
          else
            echo "Application failed to start with npx"
            exit 1
          fi

